DROP TABLE HOTEL;

CREATE TABLE HOTEL(
HOTEL_ID NUMBER,
CONSTRAINT HOTEL_PK PRIMARY KEY(HOTEL_ID),
NAME NVARCHAR2(50) NOT NULL,
COUNTRY NVARCHAR2(50) NOT NULL,
CITY NVARCHAR2(50) NOT NULL,
STREET NVARCHAR2(50) NOT NULL
);

CREATE TABLE ROOM(
ROOM_ID NUMBER,
CONSTRAINT ROOM_PK PRIMARY KEY(ROOM_ID),
NUMBER_GUESTS NUMBER DEFAULT 1 NOT NULL,
PRICE NUMBER (10,2) NOT NULL,
BREAKFAST NUMBER(1) DEFAULT 0,
CHECK (BREAKFAST BETWEEN 0 AND 1),
PETS NUMBER(1) DEFAULT 0,
CHECK (PETS BETWEEN 0 AND 1),
DATE_AVAILABLE TIMESTAMP,
HOTEL_ID NUMBER NOT NULL,
CONSTRAINT HOTEL_FK FOREIGN KEY (HOTEL_ID) REFERENCES HOTEL(HOTEL_ID)
);

CREATE TABLE USERS(
USERS_ID NUMBER,
CONSTRAINT USERS_PK PRIMARY KEY(USERS_ID),
USER_NAME NVARCHAR2(50) NOT NULL,
USER_PASS NVARCHAR2(50) NOT NULL,
USER_COUNTRY NVARCHAR2(50) NOT NULL,
USER_TYPE NVARCHAR2(5) DEFAULT 'USER' NOT NULL,
CHECK (USER_TYPE = 'ADMIN' OR USER_TYPE = 'USER')
);

CREATE TABLE ORDERS(
ORDERS_ID NUMBER,
CONSTRAINT ORDERS_PK PRIMARY KEY(ORDERS_ID),
USERS_ID NUMBER NOT NULL,
CONSTRAINT USERS_FK FOREIGN KEY (USERS_ID) REFERENCES USERS(USERS_ID),
ROOM_ID NUMBER NOT NULL,
CONSTRAINT ROOM_FK FOREIGN KEY (ROOM_ID) REFERENCES ROOM(ROOM_ID),
DATE_FROM TIMESTAMP,
DATE_TO TIMESTAMP,
MONEY_PAID NUMBER (10,2) NOT NULL
);

CREATE SEQUENCE HOTEL_SEQ INCREMENT BY 1 MAXVALUE 1000 CYCLE;
DROP SEQUENCE HOTEL_SEQ;


CREATE SEQUENCE ORDERS_SEQ INCREMENT BY 1 MAXVALUE 1000 CYCLE;
DROP SEQUENCE ORDERS_SEQ;


CREATE SEQUENCE ROOM_SEQ INCREMENT BY 1 MAXVALUE 1000 CYCLE;
DROP SEQUENCE ROOM_SEQ;


CREATE SEQUENCE USERS_SEQ INCREMENT BY 1 MAXVALUE 1000 CYCLE;
DROP SEQUENCE USERS_SEQ;

SELECT * FROM HOTEL WHERE CITY = 'DN';

SELECT * FROM HOTEL WHERE NAME LIKE 'A%';

SELECT * FROM USERS WHERE USER_NAME = 'oleg' AND USER_PASS = 123;

SELECT CUSTOMER.CUSTNAME
FROM CUSTOMER
JOIN DEAL ON DEAL.CUSTOMER_ID = CUSTOMER.CUSTOMER_ID AND
DEAL_DATE BETWEEN TO_DATE('2017/01/01', 'yyyy/mm/dd') AND TO_DATE('2018/12/31', 'yyyy/mm/dd');

SELECT CUSTNAME,  CUSTOMER.CITY, SALESMAN.NAME, SALESMAN.CITY, AMOUNT
FROM SALESMAN
JOIN CUSTOMER ON CUSTOMER.SALESMAN_ID = SALESMAN.SALESMAN_ID
JOIN DEAL ON CUSTOMER.CUSTOMER_ID = DEAL.CUSTOMER_ID AND
DEAL.AMOUNT>10000;

    --private Integer numberOfGuests;
    --private Double price;
    --private Boolean breakfastIncluded;
    --private Boolean petsAllowed;
    --private String country;
    --private String city;
    --private String hotel;

SELECT * FROM ROOM R WHERE
--R.HOTEL.COUNTRY LIKE 'UA%' AND
--R.HOTEL.CITY LIKE 'D%' AND
--R.HOTEL.NAME LIKE 'AAA' AND
(R.BREAKFAST = 0 OR R.BREAKFAST = 1) AND
(R.PETS = 0 OR R.PETS = 1) AND
R.NUMBER_GUESTS >= 1 AND
R.PRICE <= 99;

SELECT * FROM ROOM
JOIN HOTEL ON ROOM.HOTEL_ID = HOTEL.HOTEL_ID AND
HOTEL.COUNTRY LIKE 'UA%' AND
HOTEL.CITY LIKE 'D%' AND
HOTEL.NAME LIKE 'A%' AND
(ROOM.BREAKFAST = 0 OR ROOM.BREAKFAST = 1) AND
(ROOM.PETS = 0 OR ROOM.PETS = 1) AND
ROOM.NUMBER_GUESTS >= 1 AND
ROOM.PRICE <= 99;

SELECT * FROM ROOM
JOIN HOTEL ON ROOM.HOTEL_ID = HOTEL.HOTEL_ID AND
HOTEL.COUNTRY LIKE 'UA%' AND
HOTEL.CITY LIKE 'D%' AND
HOTEL.NAME LIKE 'A%' AND
ROOM.BREAKFAST = 1 AND
ROOM.PETS  = 0 AND
ROOM.NUMBER_GUESTS >= 1 AND
ROOM.PRICE <= 99;

SELECT * FROM ROOM WHERE
--R.HOTEL.COUNTRY LIKE 'UA%' AND
--R.HOTEL.CITY LIKE 'D%' AND
--R.HOTEL.NAME LIKE 'AAA' AND
BREAKFAST = 1 AND
PETS = 1 AND
NUMBER_GUESTS >= 1 AND
PRICE <= 100;